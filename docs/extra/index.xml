<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extra on My New Hugo Site</title>
    <link>http://localhost:1313/extra/</link>
    <description>Recent content in Extra on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Aug 2024 13:27:24 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/extra/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Signing Algorithm Refactor</title>
      <link>http://localhost:1313/extra/signing_algorithm_refactor/</link>
      <pubDate>Fri, 02 Aug 2024 13:27:24 +1000</pubDate>
      <guid>http://localhost:1313/extra/signing_algorithm_refactor/</guid>
      <description>Previously on Signing Algorithm, it involves multiple steps and function calls to utitlise the algorithm. This article go through refactoring steps on the algorithm under object-oriented programming. Enabling the generation and usage of ActivityPub activity under a single function call.&#xA;.You can use the following for quick navigation:&#xA;Usage - insight into how to use the codebase Activity Handler - insight into the ActivityHandler class Activity Generator - insight into the ActivityGenerator class Activity Request - insight into ActivityRequest class Actor Info Retriever - insight into ActorInfoRetriever class Full Codebase - a preview of the whole codebase combining all the components The refactoring process is done by converting the algorithm into a more object-oriented approach, and separated the algorithm function into 4 components:</description>
    </item>
    <item>
      <title>Signing Algorithm</title>
      <link>http://localhost:1313/extra/signing_algorithm/</link>
      <pubDate>Fri, 19 Jul 2024 14:18:17 +1000</pubDate>
      <guid>http://localhost:1313/extra/signing_algorithm/</guid>
      <description>Signing Algorithm We will be implementing our private key signing algorithm using Python algorithm, it is recommended that you install the following python libraries on your machine or python environment:&#xA;pip install cryptography pip install requests Note Different ActivityPub platforms requires different levels of security for signature. The algorithm we used for this section have only been tested on Mastodon, Honk and Ktistec. It works successfully for both Mastodon and Honk, but Ktistec requires additional security that I haven&#39;t quite figured out yet due to resource constraint.</description>
    </item>
  </channel>
</rss>
